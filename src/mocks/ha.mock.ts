// Generated by Home Assistant device SDK
//
//  /!\  Don't modify this file manually
//
// Use hasdk CLI to generate this file
// CMD : npx hasdk -u <url> -t <token> -o <file>
//
//
import { HaWebSocket, IConnectionConfig, IHandler } from "home-assistant-device-sdk";
import { Switch, ISwitch } from "home-assistant-device-sdk";
import { Light, IlightTransitionEffect, IlightEffect, ILightTemperature, ILight } from "home-assistant-device-sdk";

const LightEffet1 = {
    BLINK: "blink",
    BREATHE: "breathe",
    CANDLE: "candle",
    CHANNEL_CHANGE: "channel_change",
    COLORLOOP: "colorloop",
    FINISH_EFFECT: "finish_effect",
    FIREPLACE: "fireplace",
    OKAY: "okay",
    STOP_EFFECT: "stop_effect",
    STOP_HUE_EFFECT: "stop_hue_effect",
};
const LightOption1 = { temperatureMax: 6535, temperatureMin: 2000, effect: LightEffet1 };
const LightEffet2 = {
    ALARM: "Alarm",
    BEDTIME: "Bedtime",
    CANDLELIGHT: "Candlelight",
    CHRISTMAS: "Christmas",
    COOL_WHITE: "Cool white",
    COZY: "Cozy",
    DAYLIGHT: "Daylight",
    DEEP_DIVE: "Deep dive",
    DIWALI: "Diwali",
    FALL: "Fall",
    FIREPLACE: "Fireplace",
    FOCUS: "Focus",
    FOREST: "Forest",
    GOLDEN_WHITE: "Golden white",
    HALLOWEEN: "Halloween",
    JUNGLE: "Jungle",
    MOJITO: "Mojito",
    NIGHT_LIGHT: "Night light",
    OCEAN: "Ocean",
    PARTY: "Party",
    PASTEL_COLORS: "Pastel colors",
    PLANTGROWTH: "Plantgrowth",
    PULSE: "Pulse",
    RELAX: "Relax",
    RHYTHM: "Rhythm",
    ROMANCE: "Romance",
    SPRING: "Spring",
    STEAMPUNK: "Steampunk",
    SUMMER: "Summer",
    SUNSET: "Sunset",
    TV_TIME: "TV time",
    TRUE_COLORS: "True colors",
    WAKE_UP: "Wake-up",
    WARM_WHITE: "Warm white",
    WHITE: "White",
};
const LightOption2 = { temperatureMax: 6500, temperatureMin: 2200, effect: LightEffet2 };
const LightOption3 = { temperatureMax: 6500, temperatureMin: 2200 };

export class HA {
    public static async connect(config?: IConnectionConfig): Promise<void> {
        await HaWebSocket.connect(this, config);
    }
    public static async getStates(): Promise<boolean> {
        return HaWebSocket.refreshStates();
    }
    public static set onConnect(callBack: IHandler) {
        HaWebSocket.onConnect(callBack);
    }
    public static removeOnConnect(callBack: IHandler) {
        HaWebSocket.removeOnConnect(callBack);
    }

    public static readonly devices = {
        switchOffice: new Switch("switch.switch_office", "switchOffice") as ISwitch,
        lightOffice: new Light("light.light_office", "lightOffice", LightOption1) as IlightTransitionEffect<typeof LightEffet1>,
        lightbateau: new Light("light.544651954664", "lightbateau", LightOption2) as IlightEffect<typeof LightEffet2>,
        lightbedroom: new Light("light.wiz_rgbw_tunable_d3e436", "lightbedroom", LightOption3) as ILightTemperature,
        lightkitchen: new Light("light.wiz_rgbw_75478498987", "lightkitchen") as ILight,
        lightkitchen2: new Light("light.wiz_rgbw54554848454", "lightkitchen2") as ILight,
        alreadyInCoNfig: new Light("light.idFromConfigMock", "alreadyInCoNfig") as ILight,
        alreadyInCoNfig2: new Light("light.notValidName", "alreadyInCoNfig2") as ILight,
    };
    public static readonly switchs = [this.devices.switchOffice];
    public static readonly lights = [
        this.devices.lightOffice,
        this.devices.lightbateau,
        this.devices.lightbedroom,
        this.devices.lightkitchen,
        this.devices.lightkitchen2,
        this.devices.alreadyInCoNfig,
        this.devices.alreadyInCoNfig2,
    ];
    public static readonly lightBrightnesss = [this.devices.lightOffice, this.devices.lightbateau, this.devices.lightbedroom];
    public static readonly lightTemperatures = [this.devices.lightOffice, this.devices.lightbateau, this.devices.lightbedroom];
    public static readonly lightColors = [this.devices.lightOffice, this.devices.lightbateau];
    public static readonly lightEffects = [this.devices.lightOffice, this.devices.lightbateau];
    public static readonly lightTransitions = [this.devices.lightOffice];
    public static readonly lightTransitionEffects = [this.devices.lightOffice];
}
